server:
  port: 8080

jwt:
  secret: eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTY0OTIwNDczNiwiaWF0IjoxNjQ5MjA0NzM2fQ.GwRh0jIeWx-2eRk8AHncjgowjjQcz7NLxgEe02npYlA
  expiration: 36000000

spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      routes:
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth/**
          filters:
            - Authentication
            - RewritePath=/auth(?<segment>/?.*), $\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user/**
          filters:
            - Authentication
            - RewritePath=/user(?<segment>/?.*), $\{segment}
        - id: producer-service
          uri: lb://PRODUCER-SERVICE
          predicates:
            - Path=/producer/**
          filters:
            - Authentication
            - RewritePath=/producer(?<segment>/?.*), $\{segment}
        - id: consumer-service
          uri: lb://CONSUMER-SERVICE
          predicates:
            - Path=/consumer/**
          filters:
            - Authentication
            - RewritePath=/consumer(?<segment>/?.*), $\{segment}

  datasource:
    url: jdbc:postgresql://localhost:5432/desafio
    username: postgres
    password: postgres

  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL81Dialect
    hibernate:
      ddl-auto: update
    properties:
      - hibernate.format_sql: true
      - properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL81Dialect

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:9001/eureka
